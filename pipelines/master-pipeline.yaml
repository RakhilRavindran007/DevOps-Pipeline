trigger: none

parameters:
  - name: Action
    displayName: Terraform Action
    type: string
    default: validate
    values:
      - Plan
      - Apply
      - Destroy

variables:
    - group: azureterraform-production
    - name: backendServiceArm
      value: 'spn-ado-azure-deployment'
    - name: terraform_version
      value: '1.2.8'
    - name: backendAzureRmResourceGroupName
      value: 'rg-terraform-dev-we-01'
    - name: backendAzureRmStorageAccountName
      value: 'stoterraformdevwe432'
    - name: backendAzureRmContainerName
      value: 'tfstate'
    - name: backendAzureRmKey
      value: 'production.tfstate'
    - name: environment
      value: 'production'
    #- name: action
    #  value: ${{parameters.Action}}

stages:
    - stage: TerraformValidate
      displayName: Terraform Validate
      condition: ne('${{parameters.Action}}', 'Destroy')
      jobs:
          - template: templates/terraform-validate.yaml
            parameters:
                backendServiceArm: ${{variables.backendServiceArm}}
                terraform_version: ${{variables.terraform_version}}
                backendAzureRmResourceGroupName: ${{variables.backendAzureRmResourceGroupName}}
                backendAzureRmStorageAccountName: ${{variables.backendAzureRmStorageAccountName}}
                backendAzureRmContainerName: ${{variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{variables.backendAzureRmKey}}

    - stage: TerraformPlan
      displayName: Terraform Plan
      dependsOn: [TerraformValidate]
      condition: ne('${{parameters.Action}}', 'Destroy')
      jobs:
        - template: templates/terraform-plan.yml
          parameters:
                backendServiceArm: ${{variables.backendServiceArm}}
                terraform_version: ${{variables.terraform_version}}
                backendAzureRmResourceGroupName: ${{variables.backendAzureRmResourceGroupName}}
                backendAzureRmStorageAccountName: ${{variables.backendAzureRmStorageAccountName}}
                backendAzureRmContainerName: ${{variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{variables.backendAzureRmKey}}
                environment: ${{variables.environment}}
    
    - stage: TerraformApply
      displayName: Terraform Apply
      condition: ne('${{parameters.Action}}', 'Destroy')
      dependsOn: [TerraformPlan]
      jobs:
        - template: templates/terraform-apply.yaml
          parameters:
                backendServiceArm: ${{variables.backendServiceArm}}
                terraform_version: ${{variables.terraform_version}}
                backendAzureRmResourceGroupName: ${{variables.backendAzureRmResourceGroupName}}
                backendAzureRmStorageAccountName: ${{variables.backendAzureRmStorageAccountName}}
                backendAzureRmContainerName: ${{variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{variables.backendAzureRmKey}}
                environment: ${{variables.environment}}
    
    - stage: TerraformDestroy
      displayName: Terraform Destroy
      condition: contains('${{parameters.Action}}', 'Destroy')
      jobs:
        - template: templates/terraform-destroy.yaml
          parameters:
                backendServiceArm: ${{variables.backendServiceArm}}
                terraform_version: ${{variables.terraform_version}}
                backendAzureRmResourceGroupName: ${{variables.backendAzureRmResourceGroupName}}
                backendAzureRmStorageAccountName: ${{variables.backendAzureRmStorageAccountName}}
                backendAzureRmContainerName: ${{variables.backendAzureRmContainerName}}
                backendAzureRmKey: ${{variables.backendAzureRmKey}}
                environment: ${{variables.environment}}
